#
# This is a inventory with extras variables so here you can override the
# generated configurations with other variables without modifing the other
# inventories. So when you rerun the generator in the future, you don't
# loose your changes.
#

[all:vars]

# favicon_url = https://www.gbif.org/favicon.ico
# skin_favicon = https://www.gbif.org/favicon.ico
# technical_contact = support@<%= LA_domain %>
# orgSupportEmail = support@<%= LA_domain %>

<%_ if (LA_use_CAS) { _%>
# This will use to auto-add apikeys to the apikey db, so should match an admin user of:
# <%= LA_urls_prefix %><%= LA_cas_url %>/userdetails/admin
# and in new installations should match to `cas_first_admin_email` in your the local-password.ini file
apikey_def_creator_email=support@<%= LA_domain %>
apikey_def_creator_userid=1
<%_ } _%>

# Set here your privacy policy
# privacy_policy_url=

# Use for downloads in biocache
organizationName = <%= LA_project_name %>
orgCity =
orgStateProvince =
orgPostcode =
orgCountry =
orgPhone =
orgFax =
# orgEmail = info@<%= LA_domain %>
download_support_email_enabled = false
# download_support_email = support@<%= LA_domain %>
# email_sender = support@<%= LA_domain %>
# support_email = support@<%= LA_domain %>

mail_smtp_host = localhost
mail_smtp_port = 25
# Used by webapi
mail_host = localhost

default_country =
commonname_lang = en
# geocode_region = AU

# default for English or pt_BR, fr, es, de, etc
spatial_hub_locale = default

# BIE local vars
default_map_lat =
default_map_lon =
vernacular_language = en
eol_lang = en

# LA API keys moved to local-passwords.ini

# SOLR local vars
# solr_heap=16g
# If solr_bind_jetty_host is false other hosts can connect to solr instance
# (so you should use a firewall to prevent connections from the outside
# Set to true if only allow connections from the same solr host
solr_bind_jetty_host = true

# By default caches are disabled (the collections cache is problematic when collectory + biocache on same server)
# Configure properly for your case

# caches_auth_enabled=false
# caches_log_enabled=false
# If collections cache is disabled biocache-service will show collections_uid, institutions_uid instead of their respective names in facets and legends
# caches_collections_enabled=false
# caches_layers_enabled=false

# Use in: collectory
# region = Australia
# regionName = Australia

# Specify spatial fields to sample, like:
# sample_fields = cl1,cl2,cl3
sample_fields =

# In order to permit admin operations add here allowed IP lists comman separated
image_service_whitelist =

# swagger configuration
# swagger_info_terms_of_services = https://www.ala.org.au/who-we-are/terms-of-use/
swagger_contact_name = <%= LA_project_shortname %> Support
swagger_contact_url = <%= LA_urls_prefix %><%= LA_domain %>
# swagger_contact_email = support@<%= LA_domain %>

# Analytics used by biocollect
tracking_id=UA-XXXXX

<%_ if (LA_enable_ssl) { _%>
#
# Put here the correct location for your SSL certs. Now the inventories are
# using this self-signed ubuntu cert
#
# ssl_certificate_server_dir=/etc/ssl
# ssl_cert_file=certs/ssl-cert-snakeoil.pem
# ssl_key_file=private/ssl-cert-snakeoil.key
#
# If you want to use letsencrypt, you can set something similar to:
#
# ssl_certificate_server_dir=/etc/letsencrypt/live/<%= LA_domain %>
# ssl_cert_file=fullchain.pem
# ssl_key_file=privkey.pem
#
# With letsencrypt, is recommended to use one cert with multiple domains to
# make the configuration of the inventories more simple
#
# You can transfer the cert between machines after renewal via hooks (or
# using a shared folder via NFS, etc). See:
#
# https://certbot.eff.org/docs/using.html#renewing-certificates
#
<%_ } _%>

<% for(var i=0; i < LA_services_in_use.length; i++) { %>
# [<%= LA_services_in_use[i].map.group %>:vars]
<% } %>

<%_ if (LA_use_alerts) { _%>
[alerts-service:vars]

email_sender = atlas-alerts@<%= LA_domain %>
email_alert_address_title = Atlas alerts
email_info_address_title = Atlas of Living Australia
email_default_resource_name = Atlas of Living Australia
email_info_sender = atlas-alerts@ala.org.au
enable_email = false

# Overwrite this variables in your local-extras with proper values
occurrence_searchTitle = occurrence search
occurrence_searchUrl = https://biocache.ala.org.au/occurrences/search?q=passer
regions_searchTitle = ACT
regions_searchUrl = https://regions.ala.org.au/states/Australian+Capital+Territory
speciesPages_searchTitle = Shingle-back
speciesPages_searchUrl = https://bie.ala.org.au/species/Tiliqua+rugosa
collection_searchTitle = ANIC
collection_searchUrl = https://collections.ala.org.au/public/show/co13
alerts_apikey_whitelist =
<%_ } _%>

<%_ if (LA_use_CAS) { _%>
[cas-servers:vars]

# If you run CAS for the fist time without these four keys it will be autogenerated and later you can copy-paste here (see /var/log/atlas/cas/cas.log after first start to copy these autogenerated keys)
# See also https://apereo.github.io/cas/5.0.x/installation/Configuring-SSO-Session-Cookie.html
#
# You cannot put here and arbitrary string key, because needs to be of some size, etc (better autogenerate leaving this empty, and later get them from the logs, copy here, and re-run the inventory)
#

# pac4j_cookie_signing_key=
# pac4j_cookie_encryption_key=

# cas_webflow_signing_key=
# cas_webflow_encryption_key=

# Set this keys/secrets with valid keys to enable it in your CAS login menu

# http://www.pac4j.org/docs/clients.html
# https://apereo.github.io/cas/5.1.x/installation/OAuth-OpenId-Authentication.html

# pac4j_facebook_consumer_key=to_be_added_in_the_near_future
# pac4j_facebook_consumer_secret=to_be_added_in_the_near_future

# pac4j_twitter_consumer_key=to_be_added_in_the_near_future
# pac4j_twitter_consumer_secret=to_be_added_in_the_near_future

# pac4j_google_consumer_key=to_be_added_in_the_near_future
# pac4j_google_consumer_secret=to_be_added_in_the_near_future

# pac4j_linkedin_consumer_key=to_be_added_in_the_near_future
# pac4j_linkedin_consumer_secret=to_be_added_in_the_near_future

# pac4j_windows_consumer_key=to_be_added_in_the_near_future
# pac4j_windows_consumer_secret=to_be_added_in_the_near_future

# pac4j_yahoo_consumer_key=to_be_added_in_the_near_future
# pac4j_yahoo_consumer_secret=to_be_added_in_the_near_future

# Sample of Oauth configuration:
# Go to your Github organization settings, add a Oauth App
# with:
# Homepage url: https://<%= LA_cas_url %>/
# Authorization callback URL: https:///<%= LA_cas_url %>/cas/login
# put here the key and secret, and rerun the playbook
# pac4j_github_consumer_key=to_be_added_in_the_near_future
# pac4j_github_consumer_secret=to_be_added_in_the_near_future

# Sample flickr
# oauth_providers_flickr_enabled=true
# oauth_providers_flickr_key=SOMETHING
# oauth_providers_flickr_secret=SOMETHING
# oauth_providers_flickr_callback=https://auth.ala.org.au/userdetails/profile/flickrCallback

# Sample iNaturalist
# oauth_providers_inaturalist_enabled=true
# oauth_providers_inaturalist_key=SOMETHING
# oauth_providers_inaturalist_secret=SOMETHING
# oauth_providers_inaturalist_callback=${grails.serverURL}/profile/inaturalistCallback

# Use boostrap container or container-fluid
# We don't use fluid because `userdetails` has a wrong margin with fluid
skin_fluid_layout = false

# Recatcha sample
# userdetails_recaptcha_site_key=
# userdetails_recaptcha_secret_key=

# uncomment to load a db dump
# cas_db_dump=~/dev/tmp/auth-test/emmet-dump.sql
# apikey_db_dump=~/dev/tmp/auth-test/apikey-dump.sql
<%_ } else { _%>
<%_ } _%>

<%_ if (LA_use_spatial) { _%>
[spatial-hub:vars]

# Here we override the default 0,0 coordinates
startup_lat = 39.8581
startup_lng = -4.0226
startup_zoom = 3
google_analytics_id = UA-XXXXX
# file upload limit
nginx_client_max_body_size = 600m
max_request_size = 614400000

# Your node default spatial area (by default Australia)
spatial_default_area_name = 'Espa√±a'
spatial_default_area_sqkm = 4491002.4759
spatial_default_area_bbox = [-19.556, 26.588, 5.493, 44.434]

[spatial-service:vars]

# file upload limit
nginx_client_max_body_size = 600m
max_request_size = 614400000

# [geoserver:vars]

# [layers-service:vars]

# [spatial-analysis:vars]

# [layers-db:vars]

<%_ } else { _%>
<%_ } _%>
